From 140fdfa15d4a42ed7952308a03024ff165fb996b Mon Sep 17 00:00:00 2001
From: shua <itis@isthisa.email>
Date: Fri, 25 Mar 2022 21:01:26 -0400
Subject: [PATCH] cycle through keymaps

---
 config.def.h |  9 +++++----
 dwl.c        | 23 ++++++++++++++++++++++-
 2 files changed, 27 insertions(+), 5 deletions(-)

diff --git a/config.def.h b/config.def.h
index 9bdf8b5..039c146 100644
--- a/config.def.h
+++ b/config.def.h
@@ -38,12 +38,13 @@ static const MonitorRule monrules[] = {
 };
 
 /* keyboard */
-static const struct xkb_rule_names xkb_rules = {
+static const struct xkb_rule_names xkb_rules[] = { {
 	/* can specify fields: rules, model, layout, variant, options */
+	/* multiple rules will be cycled through with nextkeymap */
 	/* example:
-	.options = "ctrl:nocaps",
+	{ .options = "ctrl:nocaps", }
 	*/
-};
+} };
 
 static const int repeat_rate = 25;
 static const int repeat_delay = 600;
@@ -84,7 +85,7 @@ static const Key keys[] = {
 	{ MODKEY,                    XKB_KEY_t,          setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                    XKB_KEY_f,          setlayout,      {.v = &layouts[1]} },
 	{ MODKEY,                    XKB_KEY_m,          setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                    XKB_KEY_space,      setlayout,      {0} },
+	{ MODKEY,                    XKB_KEY_space,      nextkeymap,     {.i = +1} },
 	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_space,      togglefloating, {0} },
 	{ MODKEY,                    XKB_KEY_e,         togglefullscreen, {0} },
 	{ MODKEY,                    XKB_KEY_0,          view,           {.ui = ~0} },
diff --git a/dwl.c b/dwl.c
index 3f66be4..c96888f 100644
--- a/dwl.c
+++ b/dwl.c
@@ -236,6 +236,7 @@ static void motionabsolute(struct wl_listener *listener, void *data);
 static void motionnotify(uint32_t time);
 static void motionrelative(struct wl_listener *listener, void *data);
 static void moveresize(const Arg *arg);
+static void nextkeymap(const Arg *arg);
 static void outputmgrapply(struct wl_listener *listener, void *data);
 static void outputmgrapplyortest(struct wlr_output_configuration_v1 *config, int test);
 static void outputmgrtest(struct wl_listener *listener, void *data);
@@ -308,6 +309,7 @@ static struct wl_list keyboards;
 static unsigned int cursor_mode;
 static Client *grabc;
 static int grabcx, grabcy; /* client-relative */
+static int xkb_rules_cur = 0;
 
 static struct wlr_output_layout *output_layout;
 static struct wlr_box sgeom;
@@ -654,7 +656,7 @@ createkeyboard(struct wlr_keyboard *keyboard)
 
 	/* Prepare an XKB keymap and assign it to the keyboard. */
 	context = xkb_context_new(XKB_CONTEXT_NO_FLAGS);
-	keymap = xkb_keymap_new_from_names(context, &xkb_rules,
+	keymap = xkb_keymap_new_from_names(context, xkb_rules,
 		XKB_KEYMAP_COMPILE_NO_FLAGS);
 
 	wlr_keyboard_set_keymap(keyboard, keymap);
@@ -1372,6 +1374,25 @@ moveresize(const Arg *arg)
 	}
 }
 
+void
+nextkeymap(const Arg *arg)
+{
+	Keyboard *kb;
+	xkb_rules_cur = (xkb_rules_cur + arg->i) % LENGTH(xkb_rules);
+	const struct xkb_rule_names *xkb_rule = &(xkb_rules[xkb_rules_cur]);
+
+	wl_list_for_each(kb, &keyboards, link) {
+		struct xkb_context *context = xkb_context_new(XKB_CONTEXT_NO_FLAGS);
+		struct xkb_keymap *keymap = xkb_map_new_from_names(context, xkb_rule,
+				XKB_KEYMAP_COMPILE_NO_FLAGS);
+		wlr_keyboard_set_keymap(kb->wlr_keyboard, keymap);
+		xkb_keymap_unref(keymap);
+		xkb_context_unref(context);
+	}
+	printf("kbd %s %s\n", xkb_rule->layout, xkb_rule->variant);
+	fflush(stdout);
+}
+
 void
 outputmgrapply(struct wl_listener *listener, void *data)
 {
-- 
2.35.1

